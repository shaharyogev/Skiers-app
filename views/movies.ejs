<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Skiers -
    <%= userName%>
  </title>
  <link rel='stylesheet' href='/stylesheets/admin.css' />
  <link rel='shortcut icon' href='/images/favicon.ico' />

</head>

<body>
  <div id='mainPage'>

    <div class='navColumn'>
      <div class='navLogo flex-row'>
        <div class='logoImg'>
          <svg height="100%" viewBox="0 0 512 512" width="100%" fill="rgb(255, 255, 255)" xmlns="http://www.w3.org/2000/svg">
            <path d="m338.5 178h-15v257.734375h-13.828125v-257.734375h-15v32.5h-76.75v15h17.191406l-29.691406 45.277344v-92.777344h-15v257.734375h-13.828125v-257.734375h-15v257.734375h-29.578125v38.289063h43.992187v37.976562h15v-37.976562h43.992188v-38.289063h-29.578125v-54.617187h76.75v-15h-17.285156l29.785156-45.421876v115.039063h-29.578125v38.289063h43.992188v37.976562h15v-37.976562h43.992187v-38.289063h-29.578125zm-118.5 272.734375v8.289063h-72.980469v-8.289063zm33.050781-225.234375h24.0625l-30.164062 46h-24.0625zm-6.101562 140.617188h-24.0625l30.164062-46h24.0625zm-29.027344-61v15h17.191406l-29.691406 45.277343v-78.894531h76.75v-15h-17.285156l29.785156-45.421875v79.039063zm135.15625 145.617187v8.289063h-72.984375v-8.289063zm0 0" />
            <path d="m230.257812 136.925781-12.09375-12.089843h-4.40625v-124.835938h-60.496093v124.832031h-4.410157l-12.09375 12.09375v28.574219h93.5zm-61.996093-29.09375h17.996093v-15h-17.996093v-15.332031h17.996093v-15h-17.996093v-15.5h17.996093v-15h-17.996093v-17h30.496093v109.832031h-30.496093zm46.996093 42.667969h-63.5v-7.359375l3.308594-3.308594h56.886719l3.304687 3.308594zm0 0" />
            <path d="m363.335938 136.925781-12.09375-12.089843h-4.410157v-124.835938h-60.492187v124.832031h-4.410156l-12.09375 12.09375v28.574219h93.5zm-61.996094-29.09375h17.992187v-15h-17.992187v-15.332031h17.992187v-15h-17.992187v-15.5h17.992187v-15h-17.992187v-17h30.492187v109.832031h-30.492187zm46.996094 42.667969h-63.5v-7.359375l3.308593-3.304687h56.886719l3.304688 3.304687zm0 0" />
            <path d="m38 286.5h111.09375v-15h-111.09375c-12.683594 0-23-10.316406-23-23s10.316406-23 23-23h111.09375v-15h-111.09375c-20.953125 0-38 17.046875-38 38s17.046875 38 38 38zm0 0" />
            <path d="m351 225.5h123c12.683594 0 23 10.316406 23 23s-10.316406 23-23 23h-123v15h123c20.953125 0 38-17.046875 38-38s-17.046875-38-38-38h-123zm0 0" />
            <path d="m474 305.117188h-123v15h123c12.683594 0 23 10.320312 23 23 0 12.683593-10.316406 23-23 23h-123v15h123c20.953125 0 38-17.046876 38-38 0-20.953126-17.046875-38-38-38zm0 0" />
            <path d="m149.09375 366.117188h-111.09375c-12.683594 0-23-10.316407-23-23 0-12.679688 10.316406-23 23-23h111.09375v-15h-111.09375c-20.953125 0-38 17.046874-38 38 0 20.953124 17.046875 38 38 38h111.09375zm0 0" />
            <path d="m474 250.5h-73v-15h73zm-83 0h-15v-15h15zm-25 0h-15v-15h15zm0 0" />
            <path d="m474 345.117188h-73v-15h73zm-83 0h-15v-15h15zm-25 0h-15v-15h15zm0 0" />
          </svg>
        </div>
        <h1>Skiers</h1>
      </div>
      <div id='userNameTitle'>
        <h2 id='userName'>
          <%= userName%>
        </h2>
      </div>
      <div>
        <div class='navButtons'>
          <h2>BI Querys</h2>
          <ul>
            <li><a type='button' method='get' action='/movies' onclick="includeThisHTML('/movies')">Items In Stock </a></li>
            <li><a type='button' method='get' action='/topTenMovies' onclick="includeThisHTML('/topTenMovies')">Top Ten
                Available Items </a></li>
            <li><a type='button' method='get' action='/topTenUsers' onclick="includeThisHTML('/topTenUsers')">Top Ten
                Users </a></li>
            <li><a type='button' method='get' action='/mostActiveUser' onclick="includeThisHTML('/mostActiveUser')">Most
                Active User </a></li>
            <li><a type='button' method='get' action='topRentedMovie' onclick="includeThisHTML('/topRentedMovie')">Top
                Rented Items </a></li>

            <li><a type="button" class='menuButtonText' onclick="themeToggle('themeToggle')">
                <div id="themeToggle" class="manuBox5">Dark-Side</div>
              </a></li>
            <li><a type="button" class='menuButtonText' method='get' action='/logout' onclick="includeThisHTML('/logout')">Log-Out</a></li>
          </ul>
        </div>
      </div>
    </div>

    <div class='mainContent'>
      <div id='logoBackground'>
        <div class='logoBackground'>
          <svg height="100%" viewBox="0 0 512 512" width="100%" fill="rgb(255, 255, 255)" xmlns="http://www.w3.org/2000/svg">
            <path d="m338.5 178h-15v257.734375h-13.828125v-257.734375h-15v32.5h-76.75v15h17.191406l-29.691406 45.277344v-92.777344h-15v257.734375h-13.828125v-257.734375h-15v257.734375h-29.578125v38.289063h43.992187v37.976562h15v-37.976562h43.992188v-38.289063h-29.578125v-54.617187h76.75v-15h-17.285156l29.785156-45.421876v115.039063h-29.578125v38.289063h43.992188v37.976562h15v-37.976562h43.992187v-38.289063h-29.578125zm-118.5 272.734375v8.289063h-72.980469v-8.289063zm33.050781-225.234375h24.0625l-30.164062 46h-24.0625zm-6.101562 140.617188h-24.0625l30.164062-46h24.0625zm-29.027344-61v15h17.191406l-29.691406 45.277343v-78.894531h76.75v-15h-17.285156l29.785156-45.421875v79.039063zm135.15625 145.617187v8.289063h-72.984375v-8.289063zm0 0" />
            <path d="m230.257812 136.925781-12.09375-12.089843h-4.40625v-124.835938h-60.496093v124.832031h-4.410157l-12.09375 12.09375v28.574219h93.5zm-61.996093-29.09375h17.996093v-15h-17.996093v-15.332031h17.996093v-15h-17.996093v-15.5h17.996093v-15h-17.996093v-17h30.496093v109.832031h-30.496093zm46.996093 42.667969h-63.5v-7.359375l3.308594-3.308594h56.886719l3.304687 3.308594zm0 0" />
            <path d="m363.335938 136.925781-12.09375-12.089843h-4.410157v-124.835938h-60.492187v124.832031h-4.410156l-12.09375 12.09375v28.574219h93.5zm-61.996094-29.09375h17.992187v-15h-17.992187v-15.332031h17.992187v-15h-17.992187v-15.5h17.992187v-15h-17.992187v-17h30.492187v109.832031h-30.492187zm46.996094 42.667969h-63.5v-7.359375l3.308593-3.304687h56.886719l3.304688 3.304687zm0 0" />
            <path d="m38 286.5h111.09375v-15h-111.09375c-12.683594 0-23-10.316406-23-23s10.316406-23 23-23h111.09375v-15h-111.09375c-20.953125 0-38 17.046875-38 38s17.046875 38 38 38zm0 0" />
            <path d="m351 225.5h123c12.683594 0 23 10.316406 23 23s-10.316406 23-23 23h-123v15h123c20.953125 0 38-17.046875 38-38s-17.046875-38-38-38h-123zm0 0" />
            <path d="m474 305.117188h-123v15h123c12.683594 0 23 10.320312 23 23 0 12.683593-10.316406 23-23 23h-123v15h123c20.953125 0 38-17.046876 38-38 0-20.953126-17.046875-38-38-38zm0 0" />
            <path d="m149.09375 366.117188h-111.09375c-12.683594 0-23-10.316407-23-23 0-12.679688 10.316406-23 23-23h111.09375v-15h-111.09375c-20.953125 0-38 17.046874-38 38 0 20.953124 17.046875 38 38 38h111.09375zm0 0" />
            <path d="m474 250.5h-73v-15h73zm-83 0h-15v-15h15zm-25 0h-15v-15h15zm0 0" />
            <path d="m474 345.117188h-73v-15h73zm-83 0h-15v-15h15zm-25 0h-15v-15h15zm0 0" />
          </svg>
        </div>
      </div>

      <div class="navMenu">
        <div class='flex-space'>
          <div id="menuLogo">
            <div class="menuContainer" onclick="menuX(this)">
              <div class="menuBar1"></div>
              <div class="menuBar2"></div>
              <div class="menuBar3"></div>
            </div>
          </div>
          <h2 class='userNameMenu'>
            <%= userName %>
          </h2>
        </div>
      </div>

      <div class='resultsPanel'>

        <div id='inventoryTab'>
          <div id='navTab'>
            <a type='button' class='tabNavButton' onclick="tabToggle(0, 'inventoryTab')">New Customer</a>
            <a type='button' class='tabNavButton' onclick="tabToggle(1, 'inventoryTab')">Rent</a>
            <a type='button' class='tabNavButton' onclick="tabToggle(2, 'inventoryTab')">Return</a>
            <a type='button' class='tabNavButton' onclick="tabToggle(3, 'inventoryTab')">Inventory</a>
          </div>
          <div id='contentTab'>
            <div id='inventoryTabA' class='form tabBox inventoryTab flex-show'>
              <h2>New Customer</h2>
              <form id='submitNewCustomer' name='submitNewCustomer' action='/submitNewCustomer' onsubmit='return checkForm(id, 1)'>
                <input id='movieTitle' type='text' placeholder='Customer Name' name='name' required>
                <input id='userEmail' type='text' placeholder='Customer Email' name='email' required>
                <input type='text' placeholder='Phone Number' name='phone' required>
                <button id='submitInventory' type='submit' class='submitButton '> Submit</button>
                <span class='error'></span>
              </form>
            </div>
            <div id='inventoryTabB' class='form tabBox inventoryTab hidden'>
              <h2>Rent</h2>
              <form id='rent' name='rent' action='/submitrent' onsubmit='return checkForm(id, 1)'>
                <input id='userEmail' type='text' placeholder='Customer Email' name='email' required>
                <input id='movieTitle' type='text' placeholder='Item for rent' name='title' required>
                <input id='titleInventory' type='number' placeholder='Number of Pairs' name='inventory' required>
                <input id='days' type='number' placeholder='Number of Days' name='inventoryDays' required>
                <button id='submitInventory' type='submit' class='submitButton '> Submit</button>
                <span class='error'></span>
              </form>
            </div>

            <div id='inventoryTabC' class='form tabBox inventoryTab hidden'>
              <h2>Return</h2>
              <form id='return' name='return' action='/submitreturn' onsubmit='return checkForm(id,2)'>
                <input id='movieTitle' type='text' placeholder='Item for rent' name='title' required>
                <input id='titleInventory' type='number' placeholder='Number of Pairs' name='inventory' required>
                <input id='userEmail' type='text' placeholder='Customer Email' name='email' required>
                <button id='submitInventory' type='submit' class='submitButton'> Submit</button>
                <span class='error'></span>
              </form>
            </div>

            <div id='inventoryTabD' class='form tabBox inventoryTab hidden'>
              <h2>Add / Remove inventory</h2>
              <form id='addInventory' name='addInventory' action='/addmovietodb' onsubmit='return checkForm(id,3)'>
                <input id='movieTitle' type='text' placeholder='Item for rent' name='title' required>
                <input id='titleInventory' type='number' placeholder='Number of Pairs' name='inventory' required>
                <button id='submitInventory' type='submit' class='submitButton'> Submit</button>
                <span class='error'></span>
              </form>
            </div>
            <br>
            <br>
          </div>
        </div>

        <div id='querysResults' class='querysResults'>
          <div id='topten' class='topten'>

            <h2 class='title' id='title'> Welcome
              <%= userName %>
            </h2>
            <h3 class='subTitle' id='status'>
            </h3>
            <ul id='queryUl'>
              <li>
              </li>
            </ul>
          </div>
        </div>
      </div>

      <div id='chatLogoButton'>
        <a type='button' onclick="minimizeToggle('dot')" ondblclick="minimizeToggle('max')" ondragend="minimizeToggle('max')">
          <?xml version="1.0"?><svg height="100%" version="1.1" viewBox="0 0 20 20" width="100%" xmlns="http://www.w3.org/2000/svg">
            <g fill="none" fill-rule="evenodd" stroke="none" stroke-width="1">
              <g fill="#000000" class="chatLogoButtonDot" transform="translate(-42.000000, -41.000000)">
                <g transform="translate(42.000000, 41.000000)">
                  <path d="M18,0 L2,0 C0.9,0 0,0.9 0,2 L0,20 L4,16 L18,16 C19.1,16 20,15.1 20,14 L20,2 C20,0.9 19.1,0 18,0 L18,0 Z M4,7 L16,7 L16,9 L4,9 L4,7 L4,7 Z M12,12 L4,12 L4,10 L12,10 L12,12 L12,12 Z M16,6 L4,6 L4,4 L16,4 L16,6 L16,6 Z" />
                </g>
              </g>
            </g>
          </svg>
        </a>
      </div>

      <div id='chatLiveBox' class='chatLiveBox'>
        <div id='chatFlex'>
          <div id='minimize'>
            <div id='chatButtons'>
              <a id='chatButtonToggle' type='button' onclick="minimizeToggle('mini')" class='chatMinimize'>_</a>
            </div>
            <div class='chatMessages'>
              <div class='chatUsersOnline'>
                <h3>Online:</h3>
                <ul id='chatUsersUl'>
                  <li></li>
                </ul>
              </div>
              <div id='chatMessagesBox'>
                <h3>Store Chat:</h3>
                <ul id='chatUl'>
                  <li></li>
                </ul>
              </div>
            </div>
          </div>
          <div id='chatInputDiv'>
            <input class='chatInputTextBox' id='chatInput' type='text' placeholder='Type a message' spellcheck='true'
              required>
            <a id='chatSend' type='button'>
              <?xml version="1.0" encoding="iso-8859-1" ?>
              <!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
              <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
              <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                x="0px" y="0px" class='chatSend' width="535.5px" height="535.5px" viewBox="0 0 535.5 535.5" style="enable-background:new 0 0 535.5 535.5;"
                xml:space="preserve">
                <g>
                  <g>
                    <polygon points="0,497.25 535.5,267.75 0,38.25 0,216.75 382.5,267.75 0,318.75" />
                  </g>
                </g>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    function tabToggle(num, className) {
      let tabClassList = document.getElementsByClassName(className)
      for (let i = 0; i < tabClassList.length; i++) {
        if (i === num) {
          tabClassList[i].style.display = 'flex';
        } else {
          tabClassList[i].style.display = 'none';
        }
      }
    };


    //Chat Toggles
    let chatClosed = 0;
    let chatMini = 0;
    let miniButton = document.getElementById('chatButtonToggle');
    let chatBox = document.getElementById('chatLiveBox');
    let chatLogoButton = document.getElementById('chatLogoButton');

    function minimizeToggle(size, close) {
      function minimizeChat() {
        miniButton.innerText = '{ }';
        chatBox.setAttribute('class', 'chatLiveBoxMini');
        miniButton.setAttribute('class', 'chatEnlarge');
        chatMini = 1;
      }

      function enlargeChat() {
        miniButton.innerText = '_';
        chatBox.setAttribute('class', 'chatLiveBox');
        miniButton.setAttribute('class', 'chatMinimize');
        chatMini = 0;
      }

      function maxChat() {
        miniButton.innerText = '_';
        chatBox.setAttribute('class', 'chatLiveBoxMax');
        miniButton.setAttribute('class', 'chatMinimizeFromMax');
        chatMini = 0;
      }
      if (size == 'max' && close !== 1) {
        maxChat();
      }
      if (size == 'mini' && close !== 1) {
        if (miniButton.innerText == '_') {
          minimizeChat()
        } else {
          enlargeChat()
        }
      } else if (size == 'dot') {
        if (chatClosed === 0) {
          chatBox.setAttribute('class', 'chatLiveBoxDot');
          chatLogoButton.classList.toggle('changeDot');
          chatClosed = 1;
        } else if (close != 1) {
          if (chatMini != 1) {
            enlargeChat()
          } else {
            minimizeChat()
          }
          chatLogoButton.classList.toggle('changeDot');
          chatClosed = 0;
        }
      }
    }



    //menu X/E 
    let menuOpen = 0;
    let menuClass;
    let navColumn = document.getElementById('mainPage');

    function menuX(x, st) {
      x.classList.toggle('change');
      navColumn.classList.toggle('change');
      minimizeToggle('dot', 1)
      menuClass = x;
      if (menuOpen === 0) {
        st = setTimeout(function () {
          menuOpen = 1;
        }, 200);
      } else {
        menuOpen = 0;
      }
    }


    //close the menu if the user click anywhere else
    function menuXX() {
      if (menuOpen === 1) {
        menuX(menuClass);
      };
    }
    const style = document.documentElement.style;

    function themeColors(is) {
      let rootColors = [{
          tc: ""
        },
        {
          tb: ""
        },
        {
          te: ""
        },
        {
          tec: ""
        },
        {
          tcc: ""
        }
      ];
      for (index in rootColors) {
        let id = Object.getOwnPropertyNames(rootColors[index]);
        let value = Object.values(rootColors[index]);
        style.setProperty('--' + id, 'var(--' + id + is + ')');
      }
    }

    function themeToggle(id) {
      let themeStateText = document.getElementById(id).innerText;
      if (themeStateText == 'Dark-Side') {
        themeColors('d');
        document.getElementById(id).innerText = 'Light-Side';
      } else {
        themeColors('l');
        document.getElementById(id).innerText = 'Dark-Side';
      }
    }
    document.body.addEventListener("click", menuXX);

    //Chat
    let socket = io();
    let chatSend = document.getElementById('chatSend');
    let message = document.getElementById('chatInput');
    let chatUl = document.getElementById('chatUl');
    let chatUsersUl = document.getElementById('chatUsersUl');
    let userName = document.getElementById('userName');

    //Send user name to the server

    if (userName) {
      userName = userName.innerText;

      socket.emit('namedUserConnected', {
        userName: userName
      });
    };

    let newUserChatCount = 0;
    let newUserChatColorList = new Array;

    function newUserOnline(d) {
      newUserChatCount++;
      let newUserChatLi = document.createElement('li');
      let newChatH3 = document.createElement('h3');
      newChatH3.appendChild(document.createTextNode(d));
      newUserChatLi.appendChild(newChatH3);
      let colorPickerVar = newUserChatCount % 8;
      newChatH3.style.color = 'var(--c' + colorPickerVar + ')';
      newUserChatLi.setAttribute('class', 'newUserLi');
      newUserChatColorList[d] = 'var(--c' + colorPickerVar + ')';
      chatUsersUl.insertBefore(newUserChatLi, chatUsersUl.firstElementChild);
    }
    let usersOnlineListLocal = new Array;




    socket.on('newUserConnected', function (d) {
      newUserOnline(d)

    });


    //Emit message + acknowledgement
    function sendMessage() {
      socket.emit('new message', {
        user: userName,
        message: message.value
      }, function (d) {});
      message.value = '';
    };

    //send message trigers
    chatSend.addEventListener("click", sendMessage);
    message.addEventListener("keydown", function (e) {
      if (e.keyCode === 13) {
        sendMessage();
      }
    });

    //recive message and print to screen
    socket.on('new message', function (d) {
      let newChatLi = document.createElement('li');
      let newChatH3 = document.createElement('h3');
      let newChatP = document.createElement('p');
      let newChatH3Color = newUserChatColorList[d.user];

      newChatH3.appendChild(document.createTextNode(d.user));
      newChatH3.style.color = newChatH3Color;
      newChatP.appendChild(document.createTextNode(d.message));
      newChatLi.appendChild(newChatH3);
      newChatLi.appendChild(newChatP);
      newChatLi.setAttribute('class', 'newMessageLi');
      chatUl.appendChild(newChatLi);

      let messages = chatUl.querySelectorAll('li');
      let lastMessage = messages[messages.length - 1];
      lastMessage.scrollIntoView();
    });

    function goToRentTabWithEmail(id, nextNum) {
      let thisTab = document.getElementById(id);

      if (thisTab.querySelector('input[name="email"]')) {
        let email = thisTab.querySelector('input[name="email"]').value
        let tabClassList = document.getElementsByClassName("inventoryTab");
        thisTab.reset();
        tabToggle(nextNum, 'inventoryTab');
        tabClassList[nextNum].querySelector('input[name="email"]').value = email;
      } else {
        thisTab.reset();
        tabToggle(nextNum, 'inventoryTab');

      }
    }

    function checkForm(id, nextNum) {
      event.preventDefault();
      let formId = document.getElementById(id);
      let formDataNode = formId.querySelectorAll('input');
      let formAction = formId.action;
      let titleTest = formDataNode.values
      let emailTest;


      postForm(formAction, formDataNode, id, nextNum);

      /*
            if (formId.querySelector('input[name="email"]')) {
        emailTest = formId.querySelector('input[name="email"]').value;
      }
      if (formId.formId.querySelector('input[name="title"]')) {
        let titleTest = formId.querySelector('input[name="title"]').value;
        
        postForm(formAction, formDataNode);
      
      if (titleTest === ' ' || titleTest === '') {
        formId.querySelector('.error').innerHTML = ' cant use this movie title';
        return false;

      }else if(formId.querySelector('input[name="inventory"]')){
        let inventoryTest = formId.querySelector('input[name="inventory"]').value;

      if (inventoryTest == 0) {
        formId.querySelector('.error').innerHTML = ' the inventory cant be "0"';
        return false;
      } 
    } 
    }*/

    };

    function contentToView(json) {
      obj = JSON.parse(json);

      if (obj.title) {
        let titleT = document.getElementById('title')
        titleT.innerText = obj.title;
      }

      if (obj.status) {
        let statusT = document.getElementById('status')
        statusT.innerText = obj.status
      }

      if (obj.moviesList) {
        let ul = document.getElementById('queryUl');
        ul.innerHTML = '';
        for (i in obj.moviesList) {
          let li = document.createElement('li');
          li.appendChild(document.createTextNode(obj.moviesList[i]));
          ul.appendChild(li);
        }
      }
    };


    function includeThisHTML(page, back) {
      var z, pagePath, file, xhttp;
      if (page === 'home') {
        file = 'movies';
        pagePath = '';
      } else {
        file = page;
        pagePath = '?' + file;
      }

      if (file) {
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
          if (this.readyState == 4) {
            if (this.status == 200) {
              if (this.response.startsWith("<!DOCTYPE html>")) {
                document.open();
                document.write(this.responseText);
                document.close();
              } else {
                contentToView(this.responseText);
                if (!back) {
                  history.pushState(pagePath, pagePath, pagePath);
                }
              }
            }
            if (this.status == 404) {
              contentToView({
                "title": 'We have a little problem',
                "status": '',
                "queryUl": ''
              }); //DEV
            }
          }
        }
        xhttp.open("GET", file, true);
        xhttp.send();
        return;
      }
    };

    window.onpopstate = function (event) {
      if (window.location.pathname === '/' && window.location.search) {
        let newPage = window.location.search;
        let newPageLen = newPage.length;
        newPage = newPage.slice(1, newPageLen)
        includeThisHTML(newPage, "1");
      } else {
        includeThisHTML('home');
      }
    };

    function postForm(file, formDataNode, id, nextNum) {

      let i, pagePath, xhttp, formData;
      formData = new FormData();
      pagePath = file;
      for (i in formDataNode) {
        formData.append(formDataNode[i].name, formDataNode[i].value);
      };

      xhttp = new XMLHttpRequest();

      xhttp.onreadystatechange = function () {
        if (this.readyState == 4) {
          if (this.status == 200) {
            contentToView(this.responseText);
            goToRentTabWithEmail(id, nextNum);
          }
          if (this.status == 404) {
            contentToView({
              title: 'We have a little problem',
              status: 'Server not responding',
              queryUl: ''
            }); //DEV
          }
        }
      }
      xhttp.open('POST', pagePath, true);
      xhttp.send(formData);
    };
  </script>
</body>

</html>